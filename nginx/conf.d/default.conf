server {
    listen 80;
    server_name www.justinkozlowski.me;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 80;
    server_name justinkozlowski.me;

    # Redirect to www version
    return 301 https://www.justinkozlowski.me$request_uri;
}

server {
    listen 443 ssl;
    server_name justinkozlowski.me;

    ssl_certificate /etc/nginx/certs/justinkozlowski.me.crt;
    ssl_certificate_key /etc/nginx/certs/justinkozlowski.me.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Redirect to the www version with SSL
    return 301 https://www.justinkozlowski.me$request_uri;
}

server {
    listen 443 ssl;
    server_name www.justinkozlowski.me;

    ssl_certificate /etc/nginx/certs/justinkozlowski.me.crt;
    ssl_certificate_key /etc/nginx/certs/justinkozlowski.me.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# stream {
#     upstream stream_backend {
#          server backend1.example.com:12345;
#          server backend2.example.com:12345;
#          server backend3.example.com:12345;
#     }
#
#     server {
#         listen                12345 ssl;
#         proxy_pass            stream_backend;
#
#         ssl_certificate       /etc/ssl/certs/server.crt;
#         ssl_certificate_key   /etc/ssl/certs/server.key;
#         ssl_protocols         SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#         ssl_ciphers           HIGH:!aNULL:!MD5;
#         ssl_session_cache     shared:SSL:20m;
#         ssl_session_timeout   4h;
#         ssl_handshake_timeout 30s;
#         #...
#      }
# }
